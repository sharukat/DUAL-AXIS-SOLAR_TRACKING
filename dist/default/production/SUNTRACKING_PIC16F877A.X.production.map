Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\SUNTRACKING_PIC16F877A.X.production.sym \
  --cmf=dist/default/production\SUNTRACKING_PIC16F877A.X.production.cmf -z \
  -Q16F877A -oC:\Users\Sharuka\AppData\Local\Temp\s6g.2 \
  -Mdist/default/production/SUNTRACKING_PIC16F877A.X.production.map -E1 \
  -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Sharuka\AppData\Local\Temp\s6g.obj \
  dist/default/production\SUNTRACKING_PIC16F877A.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Sharuka\AppData\Local\Temp\s6g.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\SUNTRACKING_PIC16F877A.X.production.obj
                cinit                               7F2      7F2        E      FE4       0
                text8                               62A      62A       21      C54       0
                text7                               611      611       19      C22       0
                text1                               719      719       D9      E32       0
                maintext                            64B      64B       CE      C96       0
                cstackCOMMON                         70       70        9       70       1
                bssBANK0                             20       20        4       20       1
                bssCOMMON                            79       79        4       70       1
                strings                               3        3       39        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F2      7F2        E         0
                text8                               62A      62A       21         0
                text7                               611      611       19         0
                text1                               719      719       D9         0
                maintext                            64B      64B       CE         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       39         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        4         1

        CLASS   BANK0          
                bssBANK0                             20       20        4         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000039  00003C         6       0  STRING      2
                bssBANK0                       000020  000004  000024        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                text7                          000611  000019  00062A       C22       0  CODE        2
                text8                          00062A  000021  00064B       C54       0  CODE        2
                maintext                       00064B  0000CE  000719       C96       0  CODE        2
                text1                          000719  0000D9  0007F2       E32       0  CODE        2
                cinit                          0007F2  00000E  000800       FE4       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0024-006F             4C           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             003C-0610            5D5           2
                         0800-1FFF            800
        COMMON           007D-007D              1           1
        CONST            003C-0610            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            003C-0610            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0024-006F             4C           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          003C-0610            5D5           2
                         0800-1FFF           1800
        STRING           003C-0610            100           2
                         0800-1FFF            100

                                  Symbol Table

?_ADC_GetConversion         cstackCOMMON 0070
ADC_GetConversion@channel   cstackCOMMON 0073
Lcd_Cmd@a                   cstackCOMMON 0073
Lcd_Port@a                  cstackCOMMON 0070
Lcd_Set_Cursor@a            cstackCOMMON 0075
Lcd_Set_Cursor@b            cstackCOMMON 0074
Lcd_Set_Cursor@temp         cstackCOMMON 0078
Lcd_Set_Cursor@y            cstackCOMMON 0077
Lcd_Set_Cursor@z            cstackCOMMON 0076
Lcd_Write_Char@a            cstackCOMMON 0074
Lcd_Write_Char@temp         cstackCOMMON 0072
Lcd_Write_Char@y            cstackCOMMON 0073
Lcd_Write_String@a          cstackCOMMON 0077
Lcd_Write_String@i          cstackCOMMON 0075
PL2                         text1        07E8
_ADCON0bits                 (abs)        001F
_ADCON1bits                 (abs)        009F
_ADC_GetConversion          text8        062A
_ADC_Initilize              text7        0611
_ADRESH                     (abs)        001E
_ADRESL                     (abs)        009E
_LDR1_Value                 bssCOMMON    007B
_LDR2_Value                 bssCOMMON    0079
_LDR3_Value                 bssBANK0     0022
_LDR4_Value                 bssBANK0     0020
_Lcd_Cmd                    text1        07BA
_Lcd_Init                   text1        0776
_Lcd_Port                   text1        07D0
_Lcd_Set_Cursor             text1        075B
_Lcd_Write_Char             text1        0736
_Lcd_Write_String           text1        0719
_PORTB                      (abs)        0006
_RB0                        (abs)        0030
_RB1                        (abs)        0031
_RB2                        (abs)        0032
_RB3                        (abs)        0033
_RD2                        (abs)        0042
_RD3                        (abs)        0043
_RD4                        (abs)        0044
_RD5                        (abs)        0045
_RD6                        (abs)        0046
_RD7                        (abs)        0047
_TRISA                      (abs)        0085
_TRISB                      (abs)        0086
_TRISD                      (abs)        0088
__CFG_BOREN$ON              (abs)        0000
__CFG_CP$OFF                (abs)        0000
__CFG_CPD$OFF               (abs)        0000
__CFG_FOSC$HS               (abs)        0000
__CFG_LVP$OFF               (abs)        0000
__CFG_PWRTE$OFF             (abs)        0000
__CFG_WDTE$OFF              (abs)        0000
__CFG_WRT$OFF               (abs)        0000
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__HbssBANK0                 bssBANK0     0000
__HbssCOMMON                bssCOMMON    0000
__Hcinit                    cinit        0800
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       2008
__HcstackCOMMON             cstackCOMMON 0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     0003
__Hfunctab                  functab      0000
__Hidloc                    idloc        0000
__Hinit                     init         0000
__Hintentry                 intentry     0000
__Hmaintext                 maintext     0000
__Hpa_nodes0                pa_nodes0    0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0000
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        2008
__Hspace_1                  (abs)        007D
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__LbssBANK0                 bssBANK0     0000
__LbssCOMMON                bssCOMMON    0000
__Lcinit                    cinit        07F2
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       2007
__LcstackCOMMON             cstackCOMMON 0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     0000
__Lfunctab                  functab      0000
__Lidloc                    idloc        0000
__Linit                     init         0000
__Lintentry                 intentry     0000
__Lmaintext                 maintext     0000
__Lpa_nodes0                pa_nodes0    0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        2008
__S1                        (abs)        007D
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0002
___sp                       stack        0000
__end_ofPL2                 text1        07F2
__end_of_ADC_GetConversion  text8        064B
__end_of_ADC_Initilize      text7        062A
__end_of_Lcd_Cmd            text1        07D0
__end_of_Lcd_Init           text1        07BA
__end_of_Lcd_Port           text1        07E8
__end_of_Lcd_Set_Cursor     text1        0776
__end_of_Lcd_Write_Char     text1        075B
__end_of_Lcd_Write_String   text1        0736
__end_of__initialization    cinit        07FC
__end_of__stringtab         strings      0009
__end_of_main               maintext     0719
__initialization            cinit        07F2
__pbssBANK0                 bssBANK0     0020
__pbssCOMMON                bssCOMMON    0079
__pcstackCOMMON             cstackCOMMON 0070
__pmaintext                 maintext     064B
__pstrings                  strings      0003
__ptext1                    text1        0719
__ptext2                    text1        0736
__ptext3                    text1        075B
__ptext4                    text1        0776
__ptext5                    text1        07BA
__ptext6                    text1        07D0
__ptext7                    text7        0611
__ptext8                    text8        062A
__size_of_ADC_GetConversion (abs)        0000
__size_of_ADC_Initilize     (abs)        0000
__size_of_Lcd_Cmd           (abs)        0000
__size_of_Lcd_Init          (abs)        0000
__size_of_Lcd_Port          (abs)        0000
__size_of_Lcd_Set_Cursor    (abs)        0000
__size_of_Lcd_Write_Char    (abs)        0000
__size_of_Lcd_Write_String  (abs)        0000
__size_of_main              (abs)        0000
__stringbase                strings      0008
__stringtab                 strings      0003
_main                       maintext     064B
btemp                       (abs)        007E
end_of_initialization       cinit        07FC
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
reset_vec                   reset_vec    0000
stackhi                     (abs)        0000
stacklo                     (abs)        0000
start                       init         0000
start_initialization        cinit        07F2
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 112 in file "MainFile.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_ADC_GetConversion
		_ADC_Initilize
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 130 in file "config.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
		 -> STR_2(17), STR_1(17), 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] PTR unsigned char 
		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
		 -> STR_2(17), STR_1(17), 
  i               2    5[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 114 in file "config.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
  y               1    3[COMMON] unsigned char 
  temp            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 74 in file "config.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
  temp            1    8[COMMON] unsigned char 
  y               1    7[COMMON] unsigned char 
  z               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 95 in file "config.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 59 in file "config.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Set_Cursor
		_Lcd_Init
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 37 in file "config.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ADC_Initilize *****************
 Defined at:
		line 51 in file "MainFile.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_GetConversion *****************
 Defined at:
		line 91 in file "MainFile.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     enum E1281
 Auto vars:     Size  Location     Type
  channel         1    3[COMMON] enum E1281
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
MainFile.c
		_ADC_Initilize 		CODE           	0611	0000	26
		_main          		CODE           	064B	0000	207
		_ADC_GetConversion		CODE           	062A	0000	34

MainFile.c estimated size: 267

config.h
		_Lcd_Write_String		CODE           	0719	0000	30
		_Lcd_Init      		CODE           	0776	0000	69
		_Lcd_Write_Char		CODE           	0736	0000	38
		_Lcd_Cmd       		CODE           	07BA	0000	23
		_Lcd_Set_Cursor		CODE           	075B	0000	28
		_Lcd_Port      		CODE           	07D0	0000	25

config.h estimated size: 213

shared
		__stringtab    		STRING         	0003	0000	7
		__initialization		CODE           	07F2	0000	11
		PL2            		CODE           	07E8	0000	11

shared estimated size: 29

